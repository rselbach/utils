name: Build and Deploy Utils

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # full history for change detection

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Detect changed utilities
        id: changes
        run: |
          # get list of changed directories
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            # manual trigger: build all utilities
            echo "Manual trigger, building all utilities"
            changed_dirs=$(find . -maxdepth 2 -name "util.json" -exec dirname {} \; | sed 's|^\./||' | tr '\n' ' ')
          else
            # compare with previous commit
            changed_files=$(git diff --name-only HEAD^ HEAD)
            changed_dirs=$(echo "$changed_files" | grep -E '^[^/]+/' | cut -d'/' -f1 | sort -u | tr '\n' ' ')
          fi

          echo "Changed directories: $changed_dirs"
          echo "dirs=$changed_dirs" >> $GITHUB_OUTPUT

      - name: Set up Node.js
        if: steps.changes.outputs.dirs != ''
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Build changed utilities
        if: steps.changes.outputs.dirs != ''
        run: |
          for dir in ${{ steps.changes.outputs.dirs }}; do
            if [ -f "$dir/util.json" ]; then
              echo "Building utility: $dir"
              python3 scripts/build_utility.py "$dir" || exit 1
            fi
          done

      - name: Generate index page
        run: |
          python3 scripts/generate_index.py

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to server
        run: |
          rsync -avz --delete \
            -e "ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no" \
            --exclude '.git' \
            --exclude '.github' \
            --exclude 'scripts' \
            --exclude 'node_modules' \
            --exclude '*.md' \
            --exclude 'index-template.html' \
            ./ ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:${{ secrets.DEPLOY_PATH }}/

      - name: Clean up SSH key
        if: always()
        run: |
          rm -f ~/.ssh/deploy_key
